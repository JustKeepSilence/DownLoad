# ## --registry=https://registry.npm.taobao.org
1.登陆和验证的逻辑
(1) 根据用户名和密码进行验证,获取token信息,并将token写入cookie
    在此之后的每个请求头部都附带token信息
(2) 在进入每个页面之前先判断获取用户权限,如果获取失败则根据token去重新获取
    获取成功则根据用户权限动态生成路由,否则跳转到登陆界面
2.侧边栏动态嵌套路由的实现
所有页面的父级路由组件：Layout即侧边栏,使用<router-view>来实现点击子路由时页面的跳转
3.在路由跳转的时候使用this是没有效果的
4.侧边栏组件的渲染:基本的元素是el-menu,对于每一个需要分级的子菜单都需要使用el-submenu
无限递归组件的逻辑:
(1)循环遍历路由list中的每一个路由对象，如果该对象没有children属性则调用Menu组件去渲染
如果该对象有children属性并且children属性的list属性不为空且meta中的hidden为false，则
调用MultiMenu组件去渲染
(2)Menu组件渲染的逻辑:由于Menu组件中传进来的都是一个单独的路由对象，所以直接使用el-menu-
item进行渲染即可
(3)MultiMenu组件渲染的逻辑:该组件是一个递归组件，为了确保逻辑的清晰，传进来的是children
这就意味着在父组件中需要先将template进行渲染，传进来的是包含路由对象的列表,再对该列表进行
上述的循环即可.
5.svg的使用
直接将element-ui中的代码拷贝过来即可
6.vue-socketio的使用
(1)main.js: 
import VueSocketio from 'vue-socketio'  // 引入socketio

Vue.use(VueSocketio, 'http://192.168.0.199:8082')  // 连接socketio，默认的namespace
// 就是/
(2)this.$socket.on('movie', (data)=>{

})// 监听后台返回的数据,movie就是emit的第一个参数,第二个参数是回调函数,函数的参数
    // 就是后台接口返回的值
this.$socket.emit('movie', data)  // 向后台发送数据
7.table中实现跨页选择框的勾选
(1)给el-table绑定row-key属性, row-key属性实际的作用是标识表格每行数据是通过哪个属性来进行区别的
(2)给type=selection的el-table-column设置reserve-selection属性
reserve-selection的作用是在数据更新之后保留之前选中的数据


###### 存在的问题 ################
1.侧边栏样式还需要进行调整